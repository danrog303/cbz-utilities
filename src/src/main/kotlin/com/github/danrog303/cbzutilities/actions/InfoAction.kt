package com.github.danrog303.cbzutilities.actions

import com.github.danrog303.cbzutilities.models.ExpectedComicInformationEntries
import com.github.danrog303.cbzutilities.unpacking.CbzMetadataRetriever
import com.github.danrog303.cbzutilities.unpacking.CbzUnpacker
import com.github.danrog303.cbzutilities.unpacking.ComicInfoXmlReader
import java.io.File
import java.nio.file.Files
import java.nio.file.Paths

/**
 * Prints metadata of **args.input** cbz file
 * @param args Parsed console arguments generated by main function
 */
class InfoAction(private val args: Map<String, Any>): Runnable {
    override fun run() {
        val comicInfo = CbzMetadataRetriever(args["input"].toString()).readMetadata()
        var printedEntriesCount = 0

        if(comicInfo != null) {
            for (expectedInformationEntry in ExpectedComicInformationEntries.expectedEntries) {
                if (comicInfo.get(expectedInformationEntry.key) != null) {
                    printedEntriesCount += 1
                    println("${expectedInformationEntry.key}: ${comicInfo.get(expectedInformationEntry.key)}")
                }
            }

            if (printedEntriesCount == 0) {
                println("(no recognized metadata found in ComicInfo.xml)")
            }
        } else {
            println("(ComicInfo.xml not found)")
        }
    }
}